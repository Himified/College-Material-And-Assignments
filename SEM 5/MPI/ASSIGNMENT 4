start: nop
;QUESTION 1
MVI C,0A8H
MOV A,C
ANI 0FH    ;MASK THE HIGHER ORDER BITS(D7-D4)
OUT 00H    ;DISPLAY THE LOWER ORDER BITS(D0-D3) AT PORT 0

;QUESTION 2
MVI D,8EH
MVI E,0F7H
MOV A,D
ANI 0FH    ;MASK THE HIGHER ORDER BITS(D7-D4)
MOV D,A
MOV A,E
ANI 0FH    ;MASK THE HIGHER ORDER BITS(D7-D4)
XRA D      ;XOR THE LOWER ORDER BITS
OUT 01H    ;DISPLAY THE RESULT AT PORT 1

;QUESTION 3
MVI B,91H
MVI C,87H
MOV A,B
ANI 01H    ;MASK ALL BITS EXCEPT D0 OF REG. B
OUT 03H    ;DISPLAY AT PORT 3
MOV A,C
ANI 01H    ;MASK ALL BITS EXCEPT D0 OF REG. C
OUT 04H    ;DISPLAY AT PORT 4

;QUESTION 4
;STC
PUSH PSW   ;PUSH VALUE OF PSW ONTO MEMORY STACK
POP H      ;L=F,H=A
MOV A,L
ANI 0FEH   ;CLEAR THE CARRY FLAG
MOV L,A
PUSH H
POP PSW    ;POP DATA OF MEMORY STACK BACK

MVI B,0FFH
MOV A,B
ADI 01H    ;INCREMENT BY 1 THE VALUE OF REG. B
JNC LABEL1
MVI C,01H  ;IF CARRY FLAG NOT SET DISPLAY 01H AT PORT 5
MOV A,C
OUT 05H
JMP NEXTPROG
LABEL1: MOV A,B ;F CARRY FLAG SET DISPLAY REG. B VALUE AT PORT 6
	OUT 06H

;QUESTION 5
NEXTPROG: MVI C,0FFH
	  MVI A,0F0H
	  ANA C      ;MASK LOWER BIT OF 8-BIT NUMBER
	  OUT 07H    ;DISPLAY THE RESULT AT PORT 7

;QUESTION 6
IN 08H      ;TAKE INPUT FOR REG. B AT PORT 8
MOV B,A  
IN 09H      ;TAKE INPUT FOR REG. C AT PORT 9 
MOV C,A
MOV A,B
SUB C
JC LABEL2   ;JUMP IF CARRY FLAG NOT SET
OUT 0AH     ;DISPLAY THE RESULT AT PORT 0AH
JMP END
LABEL2: CMA      ;TAKE 1'S COMPLEMENT OF ACC 
	ADI 01H  ;TAKE 2'S COMPLEMENT OF ACC(FOR ABSOLUTE MAGNITUDE)
	OUT 0AH  ;DISPLAY THE MAGNITUDE OF RESULT AT PORT 0AH

END: hlt